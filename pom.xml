<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  	
  	<modelVersion>4.0.0</modelVersion>
  	<groupId>tr.com.serkanozal</groupId>
  	<artifactId>jillegal-demo-web</artifactId>
  	<version>1.0.0-SNAPSHOT</version>
  	<packaging>war</packaging>
    <name>Web Demo of Jillegal</name>
    <url>https://github.com/serkan-ozal/jillegal-demo-web</url>
     
  	<properties>
        
        <aws.accessKey></aws.accessKey>
		<aws.secretKey></aws.secretKey>
		
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <source.compiler.version>1.8</source.compiler.version>
        <target.compiler.version>1.8</target.compiler.version>
        
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        
        <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
        <maven.resources.plugin.version>2.4</maven.resources.plugin.version>
        <maven.vaadin.plugin.version>${vaadin.version}</maven.vaadin.plugin.version>
        <maven.jetty.plugin.version>8.1.0.RC5</maven.jetty.plugin.version>
		<maven.tomcat.plugin.version>2.2</maven.tomcat.plugin.version>
        <maven.beanstalk.plugin.version>1.0.1</maven.beanstalk.plugin.version>
        
        <beanstalk.versionLabel>${version}</beanstalk.versionLabel>
    	<beanstalk.skipIfSameVersion>false</beanstalk.skipIfSameVersion>
		
		<jillegal.version>3.0-SNAPSHOT</jillegal.version> 
		<vaadin.version>7.1.8</vaadin.version>
		<vaadin.plugin.version>7.1.8</vaadin.plugin.version>
		<spring-version>4.1.4.RELEASE</spring-version>
		<javax.servlet.api.version>3.0.1</javax.servlet.api.version>

    </properties>
  
  	<build>
        <finalName>jillegal-demo-web</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${source.compiler.version}</source>
                    <target>${target.compiler.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <executable>${env.JAVA8_HOME}/bin/javac</executable>
					<fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
	        <plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${maven.jetty.plugin.version}</version>
				<configuration>
					<stopPort>9966</stopPort>
					<stopKey>jillegal-demo-web</stopKey>
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<webAppConfig>
					    <!-- http://localhost:8080/jillegal-demo-web/ -->
						<contextPath>/jillegal-demo-web</contextPath>
					</webAppConfig>
					<systemProperties>
						<systemProperty>
							<name>MAVEN_OPTS</name>
							<value>-XX:-UseCompressedOops -XX:+UseConcMarkSweepGC -verbose:gc -Xms1024m -Xmx2048m</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
			<!--
			<plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${maven.tomcat.plugin.version}</version>
                <configuration>
                    <path>/jillegal-demo-web</path>
                    <port>9977</port>
                </configuration>
            </plugin>
            -->
            <plugin>
      			<groupId>br.com.ingenieux</groupId>
      			<artifactId>beanstalk-maven-plugin</artifactId>
      			<version>${maven.beanstalk.plugin.version}</version>
      			<configuration>
      				<applicationName>jillegal-demo-web</applicationName>
      				<environmentName>${project.build.finalName}-env</environmentName>
      				<cnamePrefix>${project.build.finalName}</cnamePrefix>
          			<s3Bucket>jillegal-demo-web</s3Bucket>
          			<s3Key>${project.artifactId}/${project.build.finalName}-${version}.war</s3Key>
          			<!-- http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html -->
          			<solutionStack>64bit Amazon Linux 2014.09 v1.0.0 running Tomcat 8 Java 8</solutionStack>
          			
          			<!-- https://github.com/ingenieux/beanstalker/blob/master/beanstalk-maven-plugin/src/site/apt/configurations-and-templates.apt --> 
          			<optionSettings>
          				<!-- 
          				On Demand Instance:
          					Type		vCPU	ECU		Memory (GiB)	Instance Storage (GB)	Linux/UNIX Usage
          					====================================================================================
	          				r3.large	2		6.5		15				1 x 32 SSD				$0.175 per Hour
							r3.xlarge	4		13		30.5			1 x 80 SSD				$0.350 per Hour
							r3.2xlarge	8		26		61				1 x 160 SSD				$0.700 per Hour
							r3.4xlarge	16		52		122				1 x 320 SSD				$1.400 per Hour
							r3.8xlarge	32		104		244				2 x 320 SSD				$2.800 per Hour
							
						Spot Instance:
							Type			Linux/UNIX Usage	Windows Usage
							====================================================
							r3.large		$0.0161 per Hour	$0.1741 per Hour
							r3.xlarge		$0.0322 per Hour	$0.2821 per Hour
							r3.2xlarge		$0.0641 per Hour	$0.4441 per Hour
							r3.4xlarge		$0.1284 per Hour	$0.6721 per Hour
							r3.8xlarge		$0.2567 per Hour	$0.9561 per Hour
          				-->
          				<optionSetting>
							<namespace>aws:autoscaling:launchconfiguration</namespace>
							<optionName>InstanceType</optionName>
							<value>r3.large</value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:environment</namespace>
							<optionName>EnvironmentType</optionName>
							<value>SingleInstance</value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:container:tomcat:jvmoptions</namespace>
							<optionName>Xms</optionName>
							<value>1024m</value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:container:tomcat:jvmoptions</namespace>
							<optionName>Xmx</optionName>
							<value>2048m</value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:container:tomcat:jvmoptions</namespace>
							<optionName>XX:MaxPermSize</optionName>
							<value>512m</value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:container:tomcat:jvmoptions</namespace>
							<optionName>XX:-UseCompressedOops</optionName>
							<value></value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:container:tomcat:jvmoptions</namespace>
							<optionName>XX:+UseConcMarkSweepGC</optionName>
							<value></value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:container:tomcat:jvmoptions</namespace>
							<optionName>XX:+PrintGCDetails</optionName>
							<value></value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:container:tomcat:jvmoptions</namespace>
							<optionName>XX:+StartAttachListener</optionName>
							<value></value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:container:tomcat:jvmoptions</namespace>
							<optionName>verbose:gc</optionName>
							<value></value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:autoscaling:launchconfiguration</namespace>
							<optionName>EC2KeyName</optionName>
							<value>jillegal-demo-web</value>
						</optionSetting>
						<!--  
						<optionSetting>
							<namespace>aws:elasticbeanstalk:application:environment</namespace>
							<optionName>jillegal.offheap.pool.objectCount</optionName>
							<value>1048576</value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:application:environment</namespace>
							<optionName>jillegal.offheap.pool.estimatedStringCount</optionName>
							<value>1048576</value>
						</optionSetting>
						-->
						<optionSetting>
							<namespace>aws:elasticbeanstalk:application:environment</namespace>
							<optionName>jillegal.demo.web.maxPersonCount</optionName>
							<value>10000000</value>
						</optionSetting>
          			</optionSettings>
          			<!-- will save as s3://[bucket name]/[artifactId]/artifactId-version.war -->
          			<!-- mvn beanstalk:check-availability -Dbeanstalk.cnamePrefix=jillegal-demo-web -->
          			<!-- mvn beanstalk:upload-source-bundle -->
          			<!-- mvn beanstalk:upload-source-bundle beanstalk:create-application-version beanstalk:create-environment -->
          			<!-- mvn beanstalk:upload-source-bundle beanstalk:create-application-version beanstalk:update-environment -->
          			<!-- mvn beanstalk:upload-source-bundle beanstalk:create-application-version beanstalk:replace-environment -->
          			<!-- mvn beanstalk:rollback-version -->
          			<!-- mvn beanstalk:clean-previous-versions -Dbeanstalk.versionsToKeep=1 -->
          			<!-- mvn beanstalk:terminate-environment -->
          			<!-- mvn beanstalk:describe-environments -->
        		</configuration>
    		</plugin>
	        <!--  
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k -Duser.language=en</extraJvmArgs>
					<webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
					</webappDirectory>
					<hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
					</hostedWebapp>
					<noServer>true</noServer>
					<draftCompile>false</draftCompile>
					<compileReport>true</compileReport>
					<style>OBF</style>
					<strict>true</strict>
					<runTarget>http://localhost:8080/</runTarget>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
							<goal>resources</goal>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile-theme</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
	
	<dependencies>
		<dependency>
            <groupId>tr.com.serkanozal</groupId>
            <artifactId>jillegal</artifactId>
            <version>${jillegal.version}</version>
        </dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<version>${vaadin.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-context</artifactId>
	        <version>${spring-version}</version>
	    </dependency>
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-context-support</artifactId>
	        <version>${spring-version}</version>
	    </dependency>
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-web</artifactId>
	        <version>${spring-version}</version>
	    </dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet.api.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
    
    <repositories>
        <repository>
            <id>nexus-maven-repository</id>
            <url>https://maven-us.nuxeo.org/nexus/content/groups/public/</url>
        </repository>
		<repository>
			<id>my-maven-repository</id>
			<url>https://github.com/serkan-ozal/maven-repository/raw/master/</url>
		</repository>
	</repositories>
    
</project>
